function out = model(x1,x2,x3,x4,par)
%
% model.m
%
% Model exported on Sep 13 2016, 09:41 by COMSOL 5.2.0.166.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('D:\Google Drive\PhD\Codes\COMSOL\Variable_design');

model.label('variable_design.mph');

model.comments(['Untitled\n\n']);

model.param.set('metal_radius', 'x25+2[um]');
model.param.set('metal_thickness', '150 [nm]');
model.param.set('period', '730 [nm]');
model.param.set('groove_width','140 [nm]');
model.param.set('groove_height', '150 [nm]');
model.param.set('polymer_thickness', '300 [nm]');
model.param.set('emitter_position', '0.6*polymer_thickness');
model.param.set('lambda', '780 [nm]');
model.param.set('f0', 'c_const/lambda');
model.param.set('metal_eps_real', '-23.483');
model.param.set('metal_eps_imaj', '1.7661');
model.param.set('polymer_eps', '1.22');
model.param.set('Px',  sprintf('%f',cosd(par)));
model.param.set('period_scale', '1.2000000000000002E-6[m]');
model.param.set('x1', sprintf('%d %s',x1,'[nm]'));
model.param.set('x2',  sprintf('%d %s',x2,'[nm]'));
model.param.set('x3',  sprintf('%d %s',x3,'[nm]'));
model.param.set('x4',  sprintf('%d %s',x4,'[nm]'));
model.param.set('x5', 'x4+period');
model.param.set('x6', 'x5+period');
model.param.set('x7', 'x6+period');
model.param.set('x8', 'x7+period');
model.param.set('x9', 'x8+period');
model.param.set('x10', 'x9+period');
model.param.set('x11', 'x10+period');
model.param.set('x12', 'x11+period');
model.param.set('x13', 'x12+period');
model.param.set('x14', 'x13+period');
model.param.set('x15', 'x14+period');
model.param.set('x16', 'x15+period');
model.param.set('x17', 'x16+period');
model.param.set('x18', 'x17+period');
model.param.set('x19', 'x18+period');
model.param.set('x20', 'x19+period');
model.param.set('x21', 'x20+period');
model.param.set('x22', 'x21+period');
model.param.set('x23', 'x22+period');
model.param.set('x24', 'x23+period');
model.param.set('x25', 'x24+period');

model.modelNode.create('comp1');

model.geom.create('geom1', 2);

model.mesh.create('mesh1', 'geom1');

model.geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.geom('geom1').create('b2', 'BezierPolygon');
model.geom('geom1').feature('b2').label('right_metal');
model.geom('geom1').feature('b2').set('p', {'x10+groove_width' 'x10+groove_width' 'x10' 'x10' 'x9+groove_width' 'x9+groove_width' 'x9' 'x9' 'x8+groove_width' 'x8+groove_width'  ...
'x8' 'x8' 'x7+groove_width' 'x7+groove_width' 'x7' 'x7' 'x6+groove_width' 'x6+groove_width' 'x6' 'x6'  ...
'x5+groove_width' 'x5+groove_width' 'x5' 'x5' 'x4+groove_width' 'x4+groove_width' 'x4' 'x4' 'x3+groove_width' 'x3+groove_width'  ...
'x3' 'x3' 'x2+groove_width' 'x2+groove_width' 'x2' 'x2' 'x1+groove_width' 'x1+groove_width' 'x1' 'x1'  ...
'0' '0' 'metal_radius' 'metal_radius' 'x25+groove_width' 'x25+groove_width' 'x25' 'x25' 'x24+groove_width' 'x24+groove_width'  ...
'x24' 'x24' 'x23+groove_width' 'x23+groove_width' 'x23' 'x23' 'x22+groove_width' 'x22+groove_width' 'x22' 'x22'  ...
'x21+groove_width' 'x21+groove_width' 'x21' 'x21' 'x20+groove_width' 'x20+groove_width' 'x20' 'x20' 'x19+groove_width' 'x19+groove_width'  ...
'x19' 'x19' 'x18+groove_width' 'x18+groove_width' 'x18' 'x18' 'x17+groove_width' 'x17+groove_width' 'x17' 'x17'  ...
'x16+groove_width' 'x16+groove_width' 'x16' 'x16' 'x15+groove_width' 'x15+groove_width' 'x15' 'x15' 'x14+groove_width' 'x14+groove_width'  ...
'x14' 'x14' 'x13+groove_width' 'x13+groove_width' 'x13' 'x13' 'x12+groove_width' 'x12+groove_width' 'x12' 'x12'  ...
'x11+groove_width' 'x11+groove_width' 'x11' 'x11' 'x10+groove_width';  ...
'0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height'  ...
'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0'  ...
'0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height'  ...
'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0'  ...
'0' '-metal_thickness' '-metal_thickness' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height'  ...
'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0'  ...
'0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height'  ...
'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0'  ...
'0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height'  ...
'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0'  ...
'0' 'groove_height' 'groove_height' '0' '0'});
model.geom('geom1').feature('b2').set('w', {'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1'});
model.geom('geom1').feature('b2').set('degree', {'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1'});
model.geom('geom1').feature('b2').set('type', 'open');
model.geom('geom1').create('b3', 'BezierPolygon');
model.geom('geom1').feature('b3').label('left_metal');
model.geom('geom1').feature('b3').set('p', {'x10+groove_width' 'x10+groove_width' 'x10' 'x10' 'x9+groove_width' 'x9+groove_width' 'x9' 'x9' 'x8+groove_width' 'x8+groove_width'  ...
'x8' 'x8' 'x7+groove_width' 'x7+groove_width' 'x7' 'x7' 'x6+groove_width' 'x6+groove_width' 'x6' 'x6'  ...
'x5+groove_width' 'x5+groove_width' 'x5' 'x5' 'x4+groove_width' 'x4+groove_width' 'x4' 'x4' 'x3+groove_width' 'x3+groove_width'  ...
'x3' 'x3' 'x2+groove_width' 'x2+groove_width' 'x2' 'x2' 'x1+groove_width' 'x1+groove_width' 'x1' 'x1'  ...
'0' '0' 'metal_radius' 'metal_radius' 'x25+groove_width' 'x25+groove_width' 'x25' 'x25' 'x24+groove_width' 'x24+groove_width'  ...
'x24' 'x24' 'x23+groove_width' 'x23+groove_width' 'x23' 'x23' 'x22+groove_width' 'x22+groove_width' 'x22' 'x22'  ...
'x21+groove_width' 'x21+groove_width' 'x21' 'x21' 'x20+groove_width' 'x20+groove_width' 'x20' 'x20' 'x19+groove_width' 'x19+groove_width'  ...
'x19' 'x19' 'x18+groove_width' 'x18+groove_width' 'x18' 'x18' 'x17+groove_width' 'x17+groove_width' 'x17' 'x17'  ...
'x16+groove_width' 'x16+groove_width' 'x16' 'x16' 'x15+groove_width' 'x15+groove_width' 'x15' 'x15' 'x14+groove_width' 'x14+groove_width'  ...
'x14' 'x14' 'x13+groove_width' 'x13+groove_width' 'x13' 'x13' 'x12+groove_width' 'x12+groove_width' 'x12' 'x12'  ...
'x11+groove_width' 'x11+groove_width' 'x11' 'x11' 'x10+groove_width';  ...
'0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height'  ...
'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0'  ...
'0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height'  ...
'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0'  ...
'0' '-metal_thickness' '-metal_thickness' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height'  ...
'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0'  ...
'0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height'  ...
'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0'  ...
'0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height'  ...
'groove_height' '0' '0' 'groove_height' 'groove_height' '0' '0' 'groove_height' 'groove_height' '0'  ...
'0' 'groove_height' 'groove_height' '0' '0'});
model.geom('geom1').feature('b3').set('w', {'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1'});
model.geom('geom1').feature('b3').set('degree', {'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1' '1' '1'});
model.geom('geom1').feature('b3').set('type', 'open');
model.geom('geom1').create('mir1', 'Mirror');
model.geom('geom1').feature('mir1').selection('input').set({'b3'});
model.geom('geom1').create('r1', 'Rectangle');
model.geom('geom1').feature('r1').label('polymer_layer');
model.geom('geom1').feature('r1').set('size', {'2*metal_radius' 'polymer_thickness'});
model.geom('geom1').feature('r1').set('base', 'center');
model.geom('geom1').feature('r1').set('pos', {'0' 'polymer_thickness/2'});
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').label('Air_frame');
model.geom('geom1').feature('r2').set('layerleft', true);
model.geom('geom1').feature('r2').set('size', {'2*metal_radius+3' '8'});
model.geom('geom1').feature('r2').setIndex('layer', 'lambda/2', 0);
model.geom('geom1').feature('r2').set('base', 'center');
model.geom('geom1').feature('r2').set('layername', {'Layer 1'});
model.geom('geom1').feature('r2').set('layerright', true);
model.geom('geom1').feature('r2').set('layertop', true);
model.geom('geom1').feature('r2').set('pos', {'0' '2'});
model.geom('geom1').create('pt1', 'Point');
model.geom('geom1').feature('pt1').label('Emitter_position');
model.geom('geom1').feature('pt1').setIndex('p', '0', 0, 0);
model.geom('geom1').feature('pt1').setIndex('p', 'emitter_position', 1, 0);
model.geom('geom1').run;

model.selection.create('sel1', 'Explicit');
model.selection('sel1').set([7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').set([8]);
model.selection.create('sel3', 'Explicit');
model.selection('sel3').set([1 2 3 4 5 6 60 61 62]);
model.selection('sel1').label('metal_parts');
model.selection('sel2').label('Polymer');
model.selection('sel3').label('Air');

model.material.create('mat1', 'Common', 'comp1');
model.material.create('mat2', 'Common', 'comp1');
model.material.create('mat3', 'Common', 'comp1');
model.material('mat1').selection.named('sel3');
model.material('mat2').selection.named('sel1');
model.material('mat3').selection.named('sel2');

model.coordSystem.create('pml1', 'geom1', 'PML');
model.coordSystem('pml1').selection.set([1 2 3 4 6 60 61 62]);

model.physics.create('emw', 'ElectromagneticWaves', 'geom1');
model.physics('emw').create('sctr1', 'Scattering', 1);
model.physics('emw').feature('sctr1').selection.set([1 2 3 5 7 9 14 276 281 282 283 284]);
model.physics('emw').create('epd1', 'ElectricPointDipole', 0);
model.physics('emw').feature('epd1').selection.set([114]);
model.physics('emw').create('ffd1', 'FarFieldDomain', 2);
model.physics('emw').feature('ffd1').selection.named('sel3');

model.mesh('mesh1').create('size1', 'Size');
model.mesh('mesh1').create('size2', 'Size');
model.mesh('mesh1').create('dis1', 'Distribution');
model.mesh('mesh1').create('ftri1', 'FreeTri');
model.mesh('mesh1').create('map1', 'Map');
model.mesh('mesh1').feature('size1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('size1').selection.set([8]);
model.mesh('mesh1').feature('size2').selection.geom('geom1', 2);
model.mesh('mesh1').feature('size2').selection.set([7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59]);
model.mesh('mesh1').feature('dis1').selection.set([4 6 8 12 275 278 279 280]);
model.mesh('mesh1').feature('ftri1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('ftri1').selection.set([5 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59]);
model.mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.mesh('mesh1').feature('map1').selection.set([1 2 3 4 6 60 61 62]);

model.view('view1').axis.set('abstractviewxscale', '0.003234677482396364');
model.view('view1').axis.set('ymin', '-0.34462594985961914');
model.view('view1').axis.set('xmax', '0.8254756927490234');
model.view('view1').axis.set('abstractviewyscale', '0.0032346772495657206');
model.view('view1').axis.set('abstractviewbratio', '0.2109273225069046');
model.view('view1').axis.set('abstractviewtratio', '-0.6455338597297668');
model.view('view1').axis.set('abstractviewrratio', '-0.48055875301361084');
model.view('view1').axis.set('xmin', '-1.1703205108642578');
model.view('view1').axis.set('abstractviewlratio', '0.4724371135234833');
model.view('view1').axis.set('ymax', '0.8677736520767212');

model.material('mat1').label('Air');
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'0' '0' '0' '0' '0' '0' '0' '0' '0'});
model.material('mat2').label('Silver');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('relpermittivity', {'metal_eps_real+j*metal_eps_imaj' '0' '0' '0' 'metal_eps_real+j*metal_eps_imaj' '0' '0' '0' 'metal_eps_real+j*metal_eps_imaj'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'6.3e7' '0' '0' '0' '6.3e7' '0' '0' '0' '6.3e7'});
model.material('mat3').label('PMMA');
model.material('mat3').propertyGroup('def').set('relpermittivity', {'polymer_eps' '0' '0' '0' 'polymer_eps' '0' '0' '0' 'polymer_eps'});
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('electricconductivity', {'0' '0' '0' '0' '0' '0' '0' '0' '0'});

model.physics('emw').prop('MeshControl').set('SizeControlParameter', 'Wavelength');
model.physics('emw').prop('MeshControl').set('PhysicsControlledMeshMinimumWavelength', 'lambda/3');
model.physics('emw').feature('epd1').set('enpI', {'Px'; '1-abs(Px)'; '0'});
model.physics('emw').feature('epd1').set('normpI', '1');

model.mesh('mesh1').feature('size').set('custom', 'on');
model.mesh('mesh1').feature('size').set('hmax', 'lambda/5');
model.mesh('mesh1').feature('size').set('hmin', '0.0015600');
model.mesh('mesh1').feature('size1').set('custom', 'on');
model.mesh('mesh1').feature('size1').set('hminactive', true);
model.mesh('mesh1').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('size1').set('hnarrowactive', true);
model.mesh('mesh1').feature('size1').set('hmin', '0.0014120');
model.mesh('mesh1').feature('size1').set('hmax', 'lambda/10');
model.mesh('mesh1').feature('size1').set('hgradactive', true);
model.mesh('mesh1').feature('size1').set('hcurveactive', true);
model.mesh('mesh1').feature('size2').set('custom', 'on');
model.mesh('mesh1').feature('size2').set('hminactive', true);
model.mesh('mesh1').feature('size2').set('hmaxactive', true);
model.mesh('mesh1').feature('size2').set('hnarrowactive', true);
model.mesh('mesh1').feature('size2').set('hmin', '3.2190E-4');
model.mesh('mesh1').feature('size2').set('hmax', 'lambda/15');
model.mesh('mesh1').feature('size2').set('hgradactive', true);
model.mesh('mesh1').feature('size2').set('hcurveactive', true);
model.mesh('mesh1').feature('dis1').set('elemcount', '10');
model.mesh('mesh1').feature('dis1').set('type', 'predefined');
model.mesh('mesh1').feature('map1').set('adjustedgdistr', true);
model.mesh('mesh1').run;

model.study.create('std1');
model.study('std1').create('freq', 'Frequency');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature.remove('fcDef');

model.result.create('pg1', 'PlotGroup2D');
model.result.create('pg2', 'PolarGroup');
model.result('pg1').create('surf1', 'Surface');
model.result('pg2').create('ff1', 'FarField');

model.study('std1').feature('freq').set('plist', 'f0');

model.sol('sol1').attach('std1');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'f0'});
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').runAll;

model.result('pg1').label('Electric Field (emw)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg2').label('2D Far Field (emw)');
model.result('pg2').feature('ff1').set('legend', true);
model.result('pg2').feature('ff1').set('phidisc', '360');

out = model;
